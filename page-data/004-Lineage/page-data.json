{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/004-Lineage/",
    "result": {"data":{"site":{"siteMetadata":{"title":"DE or DIE: Talks"}},"mdx":{"id":"18cf18c4-dd6a-51b0-9df8-d5d75a61720a","excerpt":"Здесь мы обсуждаем статью 4 Things You Need to Know When Solving for Data Quality из дайджеста #10\nК нам присоединяется Сергей Ярымов, вместе с которым мы говорим про лайнэйдж, зачем он нежен, кто как его делает и, в частности, как его делает Slack.\nВ процессе выпуска всплыл тул sqlglot — парсер и транспайлер SQL, написанный на голом пайтоне.","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"number\": 4,\n  \"title\": \"#004 Lineage\",\n  \"slug\": \"004-lineage\",\n  \"date\": \"2021-09-01\",\n  \"url\": \"https://asm0dey.ru/p/de-or-die-talks-004.mp3\",\n  \"categories\": [\"Data Quality\", \"Data\"],\n  \"subtitle\": \"data quality\",\n  \"description\": \"Выпуск про качество и тестирование данных\",\n  \"excerpt\": \"Здесь мы обсуждаем статью 4 Things You Need to Know When Solving for Data Quality из дайджеста #10\\nК нам присоединяется Сергей Ярымов, вместе с которым мы говорим про лайнэйдж, зачем он нежен, кто как его делает и, в частности, как его делает Slack.\\nВ процессе выпуска всплыл тул sqlglot — парсер и транспайлер SQL, написанный на голом пайтоне.\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar OutboundLink = makeShortcode(\"OutboundLink\");\nvar ReactJkMusicPlayer = makeShortcode(\"ReactJkMusicPlayer\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Quaified\"), mdx(\"p\", null, \"\\u0417\\u0434\\u0435\\u0441\\u044C \\u043C\\u044B \\u043E\\u0431\\u0441\\u0443\\u0436\\u0434\\u0430\\u0435\\u043C \\u0441\\u0442\\u0430\\u0442\\u044C\\u044E \", mdx(OutboundLink, {\n    href: \"https://slack.engineering/data-lineage-at-slack/\",\n    mdxType: \"OutboundLink\"\n  }, \"4 Things You Need to Know When Solving for Data Quality\"), \" \\u0438\\u0437 \", mdx(OutboundLink, {\n    href: \"https://digest.deordie.org/10_Slack_time/\",\n    mdxType: \"OutboundLink\"\n  }, \"\\u0434\\u0430\\u0439\\u0434\\u0436\\u0435\\u0441\\u0442\\u0430 #10\")), mdx(\"p\", null, \"\\u041A \\u043D\\u0430\\u043C \\u043F\\u0440\\u0438\\u0441\\u043E\\u0435\\u0434\\u0438\\u043D\\u044F\\u0435\\u0442\\u0441\\u044F \\u0421\\u0435\\u0440\\u0433\\u0435\\u0439 \\u042F\\u0440\\u044B\\u043C\\u043E\\u0432, \\u0432\\u043C\\u0435\\u0441\\u0442\\u0435 \\u0441 \\u043A\\u043E\\u0442\\u043E\\u0440\\u044B\\u043C \\u043C\\u044B \\u0433\\u043E\\u0432\\u043E\\u0440\\u0438\\u043C \\u043F\\u0440\\u043E \\u043B\\u0430\\u0439\\u043D\\u044D\\u0439\\u0434\\u0436, \\u0437\\u0430\\u0447\\u0435\\u043C \\u043E\\u043D \\u043D\\u0435\\u0436\\u0435\\u043D, \\u043A\\u0442\\u043E \\u043A\\u0430\\u043A \\u0435\\u0433\\u043E \\u0434\\u0435\\u043B\\u0430\\u0435\\u0442 \\u0438, \\u0432 \\u0447\\u0430\\u0441\\u0442\\u043D\\u043E\\u0441\\u0442\\u0438, \\u043A\\u0430\\u043A \\u0435\\u0433\\u043E \\u0434\\u0435\\u043B\\u0430\\u0435\\u0442 Slack.\"), mdx(\"p\", null, \"\\u0412 \\u043F\\u0440\\u043E\\u0446\\u0435\\u0441\\u0441\\u0435 \\u0432\\u044B\\u043F\\u0443\\u0441\\u043A\\u0430 \\u0432\\u0441\\u043F\\u043B\\u044B\\u043B \\u0442\\u0443\\u043B \", mdx(OutboundLink, {\n    href: \"https://github.com/tobymao/sqlglot\",\n    mdxType: \"OutboundLink\"\n  }, \"sqlglot\"), \" \\u2014 \\u043F\\u0430\\u0440\\u0441\\u0435\\u0440 \\u0438 \\u0442\\u0440\\u0430\\u043D\\u0441\\u043F\\u0430\\u0439\\u043B\\u0435\\u0440 SQL, \\u043D\\u0430\\u043F\\u0438\\u0441\\u0430\\u043D\\u043D\\u044B\\u0439 \\u043D\\u0430 \\u0433\\u043E\\u043B\\u043E\\u043C \\u043F\\u0430\\u0439\\u0442\\u043E\\u043D\\u0435.\"), mdx(ReactJkMusicPlayer, {\n    audioLists: [{\n      name: \"#004 Lineage\",\n      musicSrc: \"https://asm0dey.ru/p/de-or-die-talks-004.mp3\",\n      cover: \"https://raw.githubusercontent.com/deordie/deordie-talks/main/src/images/deordie-icon_upscaled.png\",\n      singer: \"DE or DIE\"\n    }],\n    showMediaSession: true,\n    mode: \"full\",\n    autoPlay: true,\n    mdxType: \"ReactJkMusicPlayer\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"#004 Lineage","date":"September 01, 2021","description":"Выпуск про качество и тестирование данных"}},"previous":{"fields":{"slug":"/003-Qualified/"},"frontmatter":{"title":"#003 Qualified"}},"next":{"fields":{"slug":"/007-Future-of-data-engineering/"},"frontmatter":{"title":"#007 Future of Data Engineering"}}},"pageContext":{"id":"18cf18c4-dd6a-51b0-9df8-d5d75a61720a","previousPostId":"a44cbac7-8a16-5437-bd30-84e2476b9727","nextPostId":"ad4f0473-64f5-5f72-add7-ee544570853e"}},
    "staticQueryHashes": ["2841359383","3257411868"]}